<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Service</title>
    <link rel="stylesheet" href="https://unpkg.com/swiper/swiper-bundle.min.css">
    <style>
        * {
            padding: 0;
            margin: 0;
            box-sizing: border-box;
        }
        body {
            font-family: Arial, sans-serif;
        }
        .modal {
            display: none;
            position: fixed;
            z-index: 1000;
            inset: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background: #00000040;
        }

        .modal-content {
            background-color: #fff;
            margin: auto;
            display: flex;
            flex-direction: column;
            padding: 32px 20px;
            max-width: 375px;
            min-width: 375px;
            text-align: left;
            border-radius: 8px;
            >h1{
                font-size: 24px;
                font-weight: 700;
                line-height: 22px;
                color: #000000;
                margin-bottom: 13px;
            }
            >p{
                color: #797979;
                font-size: 14px;
                line-height: 22px;
                font-weight: 400;
                margin-bottom: 8px;
            }
        }

        #confirmExit, #cancelExit {
            height: 48px;
            width: 100%;
            font-size: 16px;
            font-weight: 700;
            line-height: 14px;
            cursor: pointer;
            border-radius: 8px;
            text-align: center;
        }

        #confirmExit {
            background-color: #FFFFFF;
            color: #2A2C32;
            border: 1px solid #C7CBD4;
        }

        #cancelExit {
            background-color: #008BAA;
            border: 1px solid #008BAA;
            color: white;
            margin-top: 12px;
            margin-bottom: 16px;
        }
        .container {
            max-width: 600px;
            margin: 0 auto;
        }
        .wrapper{
            border-radius: 24px 24px 0 0;
            background: #fff;
            position: relative;
            padding: 16px;

        }
        .header {
            position: relative;
            display: flex;
            align-items: center;
            justify-content: space-between;
            padding-top: 17px;
            margin-bottom: 36px;
        }
        .header-title{
            cursor: pointer;
            display: flex;
            align-items: center;
            >svg{
                margin-left: 12px;
            }
        }
        .logo {
            width: 80px;
            height: 80px;
            background: purple;
            border-radius: 50%;
        }
        .logo_title {
            font-size: 32px;
            line-height: 28px;
            color: #484848;
            margin-top: 8px;
            margin-bottom: 8px;
        }
        .logo_description {
            font-weight: 400;
            font-size: 14px;
            line-height: 20px;
            color: #767676;
        }

        .service-items-container {
            overflow: hidden;
            position: relative;
            max-width: 600px;
            top: 15px;
            margin-bottom: 26px;
        }
        .service-category-item {
            user-select: none;
            padding: 11px;
            background-color: #008BAA;
            border-radius: 10px;
            text-align: center;
            cursor: pointer;
        }
        .service-category-item p {
            font-size: 14px;
            font-weight: 500;
            line-height: 20px;
            text-align: center;
            color: #fff;
        }

        .service {
            margin-top: 17px;
            margin-bottom: 24px;
        }
        .service-category-title {
            font-size: 22px;
            line-height: 28px;
            color: #383734;
            font-weight: 600;
            display: flex;
            align-items: center;
            cursor: pointer;
            height: 62px;
            border-radius: 10px;
            transition: background-color 0.3s;
        }
        .service-category >div{
            margin-bottom: 24px;
        }
        .service-title {
            font-size: 16px;
            line-height: 20px;
            font-weight: 400;
            color: #383734;
        }
        .service-description{
            font-size: 14px;
            line-height: 16px;
            color: #171717B2;
            font-weight: 400;
        }
        .service-price{
            font-size: 14px;
            line-height: 18px;
            letter-spacing: 0.09px;
            color: #383734;
        }
        .service-duration{
            line-height: 16px;
            letter-spacing: 0.08px;
            font-size: 12px;
            color: #A9A9A9;
        }
        .service-left{
            display: flex;
            flex-direction: column;
            flex: 0.7
        }
        .service-right{
            display: flex;
            margin-top: 16px;
            align-items: center;
            justify-content: flex-end;
            flex: 0.3;
            a{
                height: 30px;
                margin-left: 12px;
                text-decoration: none;
                display: flex;
                align-items: center;
                justify-content: center;
                width: 83px;
                background: #00A3AD;
                color: #fff;
                border-radius: 7px;
                text-align: center;
                font-size: 12px;
                font-weight: 600;
                letter-spacing: 0.08px;
                line-height: 16px;
                outline: none;
                cursor: pointer;
                border: none
            }
        }
        .service-category p {
            margin: 5px 0;
            max-height: 32px;
            overflow: hidden;
            text-overflow: ellipsis;
            white-space: normal;
            max-width: 176px;
        }
        .service-item{
            display: flex;
            align-items: flex-start;
        }
        .service-category-header{
            display: flex;
            cursor: pointer;
            align-items: center;
            justify-content: space-between;
        }
        .service-category {
            transition: max-height 0.5s ease, padding 0.5s ease;
            overflow: hidden;
            max-height: 0;
            opacity: 0;
        }
        .service-category.expanded {
            max-height: 500px;
            opacity: 1;

        }
        .rotate-svg {
            transform: rotate(180deg);
        }
        .toggle-svg{
            transition: .5s ease;
        }
    </style>
</head>
<body>

<div class="container">
    <div id="exitModal" class="modal">
        <div class="modal-content">
            <h1>Отменить бронирование?</h1>
            <p>Действительно хотите прервать процесс? Несохраненные изменения будут потеряны.</p>
            <button id="cancelExit">Продолжить запись</button>
            <button id="confirmExit">Да, отменить</button>

        </div>
    </div>
   <div class="wrapper">
       <div class="header">
           <a href="/booking">
               <svg width="24" height="18" viewBox="0 0 24 18" fill="none" xmlns="http://www.w3.org/2000/svg">
                   <path d="M22.5 9H1M1 9L8 17M1 9L8 1" stroke="#171717" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
               </svg>
           </a>
           <a href="/booking" class="exit">
               <svg width="14" height="14" viewBox="0 0 14 14" fill="none" xmlns="http://www.w3.org/2000/svg">
                   <path fill-rule="evenodd" clip-rule="evenodd" d="M0.307538 0.307538C0.717588 -0.102513 1.38241 -0.102513 1.79246 0.307538L7 5.51508L12.2075 0.307538C12.6176 -0.102513 13.2824 -0.102513 13.6925 0.307538C14.1025 0.717588 14.1025 1.38241 13.6925 1.79246L8.48492 7L13.6925 12.2075C14.1025 12.6176 14.1025 13.2824 13.6925 13.6925C13.2824 14.1025 12.6176 14.1025 12.2075 13.6925L7 8.48492L1.79246 13.6925C1.38241 14.1025 0.717588 14.1025 0.307538 13.6925C-0.102513 13.2824 -0.102513 12.6176 0.307538 12.2075L5.51508 7L0.307538 1.79246C-0.102513 1.38241 -0.102513 0.717588 0.307538 0.307538Z" fill="#171717"/>
               </svg>

           </a>
       </div>
       <div class="filial_info">
           <div class="logo"></div>
           <div class="header-title">
               <h1 class="logo_title">{{filial_name}}</h1>
               <svg  width="20" height="12" viewBox="0 0 20 12" fill="none" xmlns="http://www.w3.org/2000/svg">
                   <path fill-rule="evenodd" clip-rule="evenodd" d="M19.0685 0.945188C19.6543 1.53094 19.6543 2.48074 19.0685 3.06652L11.0685 11.0665C10.4827 11.6523 9.53293 11.6523 8.94715 11.0665L0.947159 3.06652C0.361364 2.48074 0.361364 1.53094 0.947159 0.945188C1.53294 0.359438 2.48269 0.359438 3.06847 0.945188L10.0078 7.88453L16.9472 0.945188C17.533 0.359438 18.4828 0.359438 19.0685 0.945188Z" fill="#AAAAAA"/>
               </svg>

           </div>
           <p class="logo_description">{{filial_address}}</p>
       </div>
       <div class="service-items-container">
           <div class="swiper-container">
               <div class="swiper-wrapper" id="service-category-items"></div>
           </div>
       </div>
       <div class="service" id="services-container"></div>
   </div>
</div>

<script src="https://unpkg.com/swiper/swiper-bundle.min.js"></script>
<script>
    const categories = {{{categories}}};
    const services = {{{services}}};
    const modal = document.getElementById("exitModal");
    const confirmExitBtn = document.getElementById("confirmExit");
    const cancelExitBtn = document.getElementById("cancelExit");
    const closeButton = document.querySelector('.header .exit');

    function generateSwiperSlides() {
        const swiperWrapper = document.getElementById('service-category-items');
        categories.forEach(category => {
            const slide = document.createElement('div');
            slide.className = 'swiper-slide service-category-item';
            slide.innerHTML = `<p>${category.name}</p>`;
            swiperWrapper.appendChild(slide);
        });
    }

    function generateServices() {
        const container = document.getElementById('services-container');
        categories.forEach(category => {
            const categoryElement = document.createElement('div');
            const titleElement = document.createElement('h1');
            const servicesElement = document.createElement('div');

            const currencyFormatter = new Intl.NumberFormat('ru-RU', {
                style: 'currency',
                currency: 'RUB',
                minimumFractionDigits: 2,
                maximumFractionDigits: 2
            });

            titleElement.innerHTML = `<div class="service-category-header">
                                        <h1 class="service-category-title">${category.name}</h1>
                                        <svg class="toggle-svg" width="20" height="11" viewBox="0 0 20 11" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M17.7388 10.5803C17.8863 10.7323 18.0862 10.8225 18.2979 10.8325C18.5095 10.8425 18.717 10.7714 18.8781 10.6339C19.0393 10.4963 19.1419 10.3025 19.1653 10.0919C19.1886 9.88136 19.1309 9.66978 19.0038 9.50026L18.9355 9.42109L11.0322 1.27109C10.7805 1.01002 10.439 0.85443 10.0769 0.83586C9.7148 0.81729 9.35917 0.937135 9.08216 1.17109L8.97716 1.26942L1.07216 9.42109C0.924114 9.57316 0.839672 9.77599 0.836058 9.98819C0.832445 10.2004 0.909932 10.406 1.05271 10.563C1.19549 10.72 1.3928 10.8167 1.60439 10.8332C1.81598 10.8497 2.0259 10.7849 2.19132 10.6519L2.26882 10.5811L10.0038 2.60442L17.7388 10.5803Z" fill="#C2C2C2"/>
                                        </svg>
                                      </div>`;
            titleElement.setAttribute('onclick', `toggleCategory('${category.id}')`);

            servicesElement.className = 'service-category expanded';
            servicesElement.id = category.id;

            services.filter(service => service.idparents=== category.id).forEach(service => {
                const serviceElement = document.createElement('div');
                let serviceComment = `<p class="service-description">Без комментария</p>`
                if(service.comment){
                    serviceComment = `<p class="service-description">${service.comment}</p>`
                }
                serviceElement.innerHTML = `
                    <div class="service-item">
                        <div class="service-left">
                            <p class="service-title">${service.name}</p>
                            ${serviceComment}
                        </div>
                        <div class="service-right">
                            <div>
                                <p class="service-price">${currencyFormatter.format(parseInt(service.tarif))}</p>
                                <p class="service-duration">${service.duration} мин</p>
                            </div>
                            <a href="/choose_service/${service.id}">Добавить</a>
                        </div>
                    </div>
                    `;
                servicesElement.appendChild(serviceElement);
            });

            categoryElement.appendChild(titleElement);
            categoryElement.appendChild(servicesElement);
            container.appendChild(categoryElement);
        });
    }

    function toggleCategory(categoryId) {
        const categoryElement = document.getElementById(categoryId);
        categoryElement.classList.toggle('expanded');
        const svg = categoryElement.previousElementSibling.querySelector('svg');
        svg.classList.toggle('rotate-svg');
    }
    closeButton.addEventListener('click', (event) => {
        event.preventDefault();
        modal.style.display = "flex";
    });
    confirmExitBtn.addEventListener('click', () => {
        window.location.href = '/exit';
    });
    cancelExitBtn.addEventListener('click', () => {
        modal.style.display = "none";
    });
    window.addEventListener('click', (event) => {
        if (event.target === modal) {
            modal.style.display = "none";
        }
    });

    document.addEventListener('DOMContentLoaded', () => {
        generateSwiperSlides();
        generateServices();
        const swiper = new Swiper('.swiper-container', {
            spaceBetween: 20,
            slidesPerView: 3.2,
            navigation: {
                nextEl: '.swiper-button-next',
                prevEl: '.swiper-button-prev',
            },
        });
    });
</script>
</body>
</html>
